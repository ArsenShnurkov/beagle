AC_INIT(indexer/Filter.cs)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(beagle, 0.0.3)
AM_MAINTAINER_MODE

AC_PROG_INSTALL
AM_PROG_LIBTOOL

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
	AC_MSG_ERROR([You need to install pkg-config])
fi


if test "x$MCSTEST" = "xno"; then
	AC_MSG_ERROR([You need to install mcs (from mono)])
fi


PKG_CHECK_MODULES(BEAGLE_UI, gtk-sharp gtkhtml-sharp gnome-sharp)
AC_SUBST(BEAGLE_UI_LIBS)

dnl ----------------------------------------------

EVOLUTION_SHARP_REQUIRED_VERSION=0.3
PKG_CHECK_MODULES(EVO_SHARP,						\
                  evolution-sharp >= $EVOLUTION_SHARP_REQUIRED_VERSION, \
                  enable_evo_sharp=yes,					\
		  enable_evo_sharp=no)
AC_SUBST(EVO_SHARP_LIBS)

AM_CONDITIONAL(ENABLE_EVO_SHARP, test "x$enable_evo_sharp" = "xyes")

dnl ----------------------------------------------

dnl beagled

PKG_CHECK_MODULES(BEAGLED, dbus-sharp)
AC_SUBST(BEAGLED_LIBS)

dnl ----------------------------------------------

dnl Epiphany Extension
dnl Much of this is cut&pasted from epiphany-extensions/configure.ac

AC_ARG_ENABLE([epiphany-extension],
	[  --enable-epiphany-extension   Enable Epiphany Extension ],
	enable_epiphany_extension=$enableval,
	enable_epiphany_extension=yes)

EPIPHANY_REQUIRED=1.2.1
LIBXML_REQUIRED=2.6.0
LIBGLIB_REQUIRED=2.4.0
LIBGTK_REQUIRED=2.4.0

AC_SUBST(EPIPHANY_REQUIRED)
AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(LIBGLIB_REQUIRED)
AC_SUBST(LIBGTK_REQUIRED)

dnl fixme -- combine the dependencies of only the enabled plugins
PKG_CHECK_MODULES(EPIPHANY_DEPENDENCY, \
		  libxml-2.0 >= $LIBXML_REQUIRED \
		  libglade-2.0 \
		  glib-2.0 >= $LIBGLIB_REQUIRED \
		  gmodule-2.0 \
		  gtk+-2.0 >= $LIBGTK_REQUIRED \
		  epiphany-1.2 >= $EPIPHANY_REQUIRED,
		  have_epiphany_dependencies=yes,
		  have_epiphany_dependencies=no)
AC_SUBST(EPIPHANY_DEPENDENCY_CFLAGS)
AC_SUBST(EPIPHANY_DEPENDENCY_LIBS)

EPIPHANY_PREFIX="`$PKG_CONFIG --variable=prefix epiphany-1.2`"
AC_SUBST(EPIPHANY_PREFIX)

if test "x$have_epiphany_dependencies" = "xno"; then
   enable_epiphany_extension="no (missing dependencies)"
else
	if test "x$enable_epiphany_extension" != "xyes"; then
	   enable_epiphany_extension="disabled"
	fi
fi

AM_CONDITIONAL(ENABLE_EPIPHANY_EXTENSION, test "x$enable_epiphany_extension" = "xyes")

dnl ----------------------------------------------

dnl Searchomatic

PKG_CHECK_MODULES(SEARCHOMATIC, gtk+-2.0)
AC_SUBST(SEARCHOMATIC_CFLAGS)
AC_SUBST(SEARCHOMATIC_LIBS)

dnl ----------------------------------------------

dnl Chooser-fu

PKG_CHECK_MODULES(CHOOSER_FU, gtk+-2.0)
AC_SUBST(CHOOSER_FU_CFLAGS)
AC_SUBST(CHOOSER_FU_LIBS)

dnl ----------------------------------------------

AC_OUTPUT([
Makefile
images/Makefile
templates/Makefile
Util/Makefile
Lucene.Net/Makefile
indexer/Makefile
Filters/Makefile
Tiles/Makefile
tools/Makefile
Best/Makefile
epiphany-extension/Makefile
searchomatic/Makefile
chooser-fu/Makefile
beagle-0.0.pc
])

echo "
	Prefix:			${prefix}
	Evolution-Sharp?	${enable_evo_sharp}
	Epiphany Extension?	${enable_epiphany_extension}

"

if test "x$enable_epiphany_extension" = "xyes"; then
   echo "NOTE: The Beagle Epiphany Extension Is Totally Insecure!"
   echo "      Use it at your own risk!"
   echo

   if test "x${prefix}" != "x$EPIPHANY_PREFIX"; then
      echo "NOTE: Epiphany seems to be installed in $EPIPHANY_PREFIX, not ${prefix}."
      echo "      Epiphany will not be able to find Beagle's Epiphany Extension"
      echo "      unless you do something like:"
      echo "      # ln -s ${prefix}/lib/epiphany/extensions/libbeagleextension.so \\"
      echo "        $EPIPHANY_PREFIX/lib/epiphany/extensions"
   fi
fi

	